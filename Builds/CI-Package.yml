# Critical Manufacturing Framework Continuous Integration Package Pipeline
# dependsOn:
#             - cmf cli
#             - cmf pipeline

pool:
  name: Releases

# A pipeline with no CI trigger
trigger: none

# A pipeline with no PR trigger
pr: none

parameters:
- name: packages
  type: object

variables:
 - template: ../EnvironmentConfigs/GlobalVariables.yml  # Template reference to global variables
 - name: GroupName
   value: BuiltHEADs
 - name: packOutputDir
   value: $(CIPackages)/$(Build.SourceBranchName)


workspace:
  clean: all

name: $(Build.SourceBranchName)_$(Build.DefinitionName).$(Build.BuildId)
steps:
- checkout: self

# set node version
- template: .tasks/use-node-version.yml

# set dotnet version
- template: .tasks/use-dotnet-version.yml

# install cmf-cli
- template: .tasks/install-cli.yml

# install cmf-pipeline
- template: .tasks/install-cmf-pipeline.yml

- ${{ each package in parameters.packages }}:
  # cmf build
  - pwsh: $(CmfCliPath)/cmf build
    workingDirectory: ${{ package.path }}
    displayName: Build ${{ package.packageId }} @ ${{ package.path }}

  # cmf pack
  - pwsh: $(CmfCliPath)/cmf pack --force --outputDir $(packOutputDir)
    workingDirectory: ${{ package.path }}
    displayName: Pack ${{ package.packageId }} @ ${{ package.path }}

  # set new built HEAD
  - pwsh: $(CmfPipelinePath)/cmf-pipeline azureDevOps variableGroup updateVariable --group $(GroupName) --key ${{ package.packageId }}@$(Build.SourceBranchName) --value ${{ package.head }}
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    displayName: Set variable ${{ package.packageId }}@$(Build.SourceBranchName):${{ package.head }} @ $(GroupName)


# Clean Agent Directories
- template: .tasks/clean-agent-directories.yml