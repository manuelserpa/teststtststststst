{
	"tasks": [
		{
			"id": "task_87583",
			"reference": {
				"name": "systemActionGroupEvent",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"replyTimeout": 60000,
				"___cmf___name": "On System Event",
				"___cmf___color": "#0080ff",
				"actionGroup": "NiceLabelPrintInformation"
			}
		},
		{
			"id": "task_87776",
			"reference": {
				"name": "createFile",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-filedrivers-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"encoding": "utf8",
				"mode": 438,
				"flag": "w",
				"attempts": 1,
				"sleepBetweenAttempts": 1000
			},
			"driver": "FileDriver"
		},
		{
			"id": "task_87968",
			"reference": {
				"name": "codeExecution",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"tsCode": [
					"import { Framework } from 'framework';",
					"",
					"export default class {",
					"",
					"    /** Allows accessing external functions */",
					"    private framework: Framework;",
					"",
					"    constructor(framework: Framework) {",
					"        this.framework = framework;",
					"    }",
					"",
					"    /*",
					"     * Entry point of the class (IMPORTANT: don't change the signature of this method)",
					"     * Should return an object containing the values for each output to emit",
					"     * If necessary, use the parameter \"outputs\" to emit data while running the code.",
					"     */",
					"    public async main(inputs: any, outputs: any): Promise<any> {",
					"        // Add code here",
					"        var message = inputs.data",
					"        ",
					"        var path = await this.framework.dataStore.retrieve(\"_Generic_Directory\",\".\")",
					"",
					"        let key: keyof any;",
					"        for (key in message) {",
					"        // message.forEach((value: any) => {            ",
					"            var content = \"\";            ",
					"            let parameterKey: keyof any;",
					"            for (parameterKey in message[key]) {  // let k: \"a\" | \"b\" | \"c\"",
					"                const parameterValue = message[key][parameterKey];  // Type is string | number",
					"                content = content.concat(`${parameterKey}=${parameterValue}\\n`)",
					"            }",
					"            content = content.concat(\"END\")        ",
					"            outputs.Content.emit(content)",
					"            outputs.Path.emit(`${path}\\\\cm_${key}_${Date.now().toString()}.prn`)",
					"        }",
					"       // });",
					"        // emit output during execution: outputs.output1.emit(\"something\");",
					"        // return example: return { output1: inputs.input1, output2: \"Hello World\" };",
					"    }",
					"}",
					""
				],
				"jsCodeBase64": "T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNsYXNzIGRlZmF1bHRfMSB7DQogICAgY29uc3RydWN0b3IoZnJhbWV3b3JrKSB7DQogICAgICAgIHRoaXMuZnJhbWV3b3JrID0gZnJhbWV3b3JrOw0KICAgIH0NCiAgICAvKg0KICAgICAqIEVudHJ5IHBvaW50IG9mIHRoZSBjbGFzcyAoSU1QT1JUQU5UOiBkb24ndCBjaGFuZ2UgdGhlIHNpZ25hdHVyZSBvZiB0aGlzIG1ldGhvZCkNCiAgICAgKiBTaG91bGQgcmV0dXJuIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSB2YWx1ZXMgZm9yIGVhY2ggb3V0cHV0IHRvIGVtaXQNCiAgICAgKiBJZiBuZWNlc3NhcnksIHVzZSB0aGUgcGFyYW1ldGVyICJvdXRwdXRzIiB0byBlbWl0IGRhdGEgd2hpbGUgcnVubmluZyB0aGUgY29kZS4NCiAgICAgKi8NCiAgICBhc3luYyBtYWluKGlucHV0cywgb3V0cHV0cykgew0KICAgICAgICAvLyBBZGQgY29kZSBoZXJlDQogICAgICAgIHZhciBtZXNzYWdlID0gaW5wdXRzLmRhdGE7DQogICAgICAgIHZhciBwYXRoID0gYXdhaXQgdGhpcy5mcmFtZXdvcmsuZGF0YVN0b3JlLnJldHJpZXZlKCJfR2VuZXJpY19EaXJlY3RvcnkiLCAiLiIpOw0KICAgICAgICBsZXQga2V5Ow0KICAgICAgICBmb3IgKGtleSBpbiBtZXNzYWdlKSB7DQogICAgICAgICAgICAvLyBtZXNzYWdlLmZvckVhY2goKHZhbHVlOiBhbnkpID0+IHsgICAgICAgICAgICANCiAgICAgICAgICAgIHZhciBjb250ZW50ID0gIiI7DQogICAgICAgICAgICBsZXQgcGFyYW1ldGVyS2V5Ow0KICAgICAgICAgICAgZm9yIChwYXJhbWV0ZXJLZXkgaW4gbWVzc2FnZVtrZXldKSB7DQogICAgICAgICAgICAgICAgY29uc3QgcGFyYW1ldGVyVmFsdWUgPSBtZXNzYWdlW2tleV1bcGFyYW1ldGVyS2V5XTsgLy8gVHlwZSBpcyBzdHJpbmcgfCBudW1iZXINCiAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5jb25jYXQoYCR7cGFyYW1ldGVyS2V5fT0ke3BhcmFtZXRlclZhbHVlfVxuYCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5jb25jYXQoIkVORCIpOw0KICAgICAgICAgICAgb3V0cHV0cy5Db250ZW50LmVtaXQoY29udGVudCk7DQogICAgICAgICAgICBvdXRwdXRzLlBhdGguZW1pdChgJHtwYXRofVxcY21fJHtrZXl9XyR7RGF0ZS5ub3coKS50b1N0cmluZygpfS5wcm5gKTsNCiAgICAgICAgfQ0KICAgICAgICAvLyB9KTsNCiAgICAgICAgLy8gZW1pdCBvdXRwdXQgZHVyaW5nIGV4ZWN1dGlvbjogb3V0cHV0cy5vdXRwdXQxLmVtaXQoInNvbWV0aGluZyIpOw0KICAgICAgICAvLyByZXR1cm4gZXhhbXBsZTogcmV0dXJuIHsgb3V0cHV0MTogaW5wdXRzLmlucHV0MSwgb3V0cHV0MjogIkhlbGxvIFdvcmxkIiB9Ow0KICAgIH0NCn0NCmV4cG9ydHMuZGVmYXVsdCA9IGRlZmF1bHRfMTsNCg==",
				"inputs": [
					{
						"name": "data",
						"valueType": {
							"friendlyName": "data",
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					}
				],
				"outputs": [
					{
						"name": "Content",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						},
						"defaultValue": null
					},
					{
						"name": "Path",
						"valueType": null
					}
				],
				"contextExpirationInMilliseconds": 10000,
				"executionExpirationInMilliseconds": 0,
				"___cmf___name": "Code"
			}
		}
	],
	"converters": [],
	"links": [
		{
			"id": "820757eb-c088-499a-95f7-31a911d9295d",
			"sourceId": "task_87583",
			"targetId": "task_87968",
			"inputName": "dataIn",
			"outputName": "data"
		},
		{
			"id": "1a27c5e4-46ac-41c7-b785-6da9ddb44869",
			"sourceId": "task_87968",
			"targetId": "task_87776",
			"inputName": "content",
			"outputName": "ContentOut"
		},
		{
			"id": "962137df-298b-4525-bd5d-4993548c7730",
			"sourceId": "task_87968",
			"targetId": "task_87776",
			"inputName": "path",
			"outputName": "PathOut"
		},
		{
			"id": "b37ef5e4-ed55-4fd7-95a9-ce3a7c5a38bb",
			"sourceId": "task_87968",
			"targetId": "task_87776",
			"inputName": "activate",
			"outputName": "ContentOut"
		},
		{
			"id": "9bbbe7b7-4d8d-4974-b316-cd36fcbc10b8",
			"sourceId": "task_87583",
			"targetId": "task_87968",
			"inputName": "activate",
			"outputName": "data"
		}
	],
	"layout": {
		"general": {
			"color": "#0080ff",
			"notes": []
		},
		"drawers": {
			"DIAGRAM": {
				"tasks": {
					"task_87583": {
						"collapsed": false,
						"position": {
							"x": 333.87096774193554,
							"y": 294.4808467741936
						},
						"outdated": false
					},
					"task_87776": {
						"collapsed": false,
						"position": {
							"x": 1466,
							"y": 315
						},
						"outdated": false
					},
					"task_87968": {
						"collapsed": false,
						"position": {
							"x": 906,
							"y": 290
						},
						"outdated": false
					}
				},
				"links": {
					"820757eb-c088-499a-95f7-31a911d9295d": {
						"vertices": []
					},
					"1a27c5e4-46ac-41c7-b785-6da9ddb44869": {
						"vertices": []
					},
					"962137df-298b-4525-bd5d-4993548c7730": {
						"vertices": []
					},
					"b37ef5e4-ed55-4fd7-95a9-ce3a7c5a38bb": {
						"vertices": []
					},
					"9bbbe7b7-4d8d-4974-b316-cd36fcbc10b8": {
						"vertices": []
					}
				},
				"notes": {},
				"pan": {
					"x": 205,
					"y": 2
				},
				"zoom": 0.78
			}
		}
	}
}
