{
	"tasks": [
		{
			"id": "task_44586",
			"reference": {
				"name": "subWorkflowEnd",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"inputs": [
					{
						"name": "MaterialData",
						"valueType": {
							"friendlyName": "MaterialData",
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					}
				]
			}
		},
		{
			"id": "task_44588",
			"reference": {
				"name": "subWorkflowStart",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"outputs": [
					{
						"name": "MaterialData",
						"valueType": {
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						},
						"defaultValue": null
					}
				],
				"___cmf___name": "Start"
			}
		},
		{
			"id": "task_44590",
			"reference": {
				"name": "workflow",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"automationWorkflow": {
					"DisplayName": "ErrorHandling",
					"IsShared": true,
					"Name": "ErrorHandling"
				},
				"executeWhenAllInputsDefined": false,
				"contextsExpirationInMilliseconds": 60000,
				"executionExpirationInMilliseconds": 1200000,
				"inputs": [
					{
						"name": "Error",
						"valueType": {
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					},
					{
						"name": "ErrorCode",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					},
					{
						"name": "ErrorText",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					},
					{
						"name": "ResourceName",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					}
				],
				"outputs": [
					{
						"name": "Error",
						"valueType": {
							"friendlyName": "Error",
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					}
				],
				"___cmf___name": "Workflow",
				"___cmf___color": "#ff0000"
			}
		},
		{
			"id": "task_44592",
			"reference": {
				"name": "equipmentCommand",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"_inputs": [
					{
						"parameter": {
							"$type": "Cmf.Foundation.BusinessObjects.AutomationCommandParameter, Cmf.Foundation.BusinessObjects",
							"Name": "BATCHID",
							"DataType": 0
						},
						"dataType": "String"
					}
				],
				"_command": {
					"$type": "Cmf.Foundation.BusinessObjects.AutomationCommand, Cmf.Foundation.BusinessObjects",
					"Name": "START"
				},
				"___cmf___name": "Execute Equipment Command"
			},
			"driver": "SecsGemEquipment"
		},
		{
			"id": "task_15186",
			"reference": {
				"name": "expressionEvaluator",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "9.1.0-202209072"
				}
			},
			"settings": {
				"_expressionType": 0,
				"_evaluatorBehavior": "EvaluateAll",
				"___cmf___name": "Expression Evaluator",
				"_inputs": [
					{
						"name": "MaterialData",
						"valueType": {
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						},
						"defaultValue": {},
						"required": true
					}
				],
				"_outputs": [
					{
						"name": "MaterialName",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						},
						"defaultValue": null,
						"expression": "MaterialData[0].MaterialName"
					}
				]
			}
		}
	],
	"converters": [
		{
			"id": "@criticalmanufacturing/connect-iot-custom-utilities-amsosram-tasks#anyToErrorCodeConstant",
			"reference": {
				"name": "anyToErrorCodeConstant",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-custom-utilities-amsosram-tasks",
					"version": "2.0.0"
				}
			}
		}
	],
	"links": [
		{
			"id": "task_44588_MaterialDataOut-task_44586_MaterialData",
			"sourceId": "task_44588",
			"targetId": "task_44586",
			"inputName": "MaterialData",
			"outputName": "MaterialDataOut",
			"converters": []
		},
		{
			"id": "task_44592_success-task_44586_success",
			"sourceId": "task_44592",
			"targetId": "task_44586",
			"inputName": "success",
			"outputName": "success",
			"converters": []
		},
		{
			"id": "task_44592_error-task_44590_ErrorIn",
			"sourceId": "task_44592",
			"targetId": "task_44590",
			"inputName": "ErrorIn",
			"outputName": "error",
			"converters": []
		},
		{
			"id": "task_44592_error-task_44590_activate",
			"sourceId": "task_44592",
			"targetId": "task_44590",
			"inputName": "activate",
			"outputName": "error",
			"converters": []
		},
		{
			"id": "task_44590_ErrorOut-task_44586_error",
			"sourceId": "task_44590",
			"targetId": "task_44586",
			"inputName": "error",
			"outputName": "ErrorOut",
			"converters": []
		},
		{
			"id": "36aa059c-f240-4188-af93-de87c9acabdd",
			"sourceId": "task_44592",
			"targetId": "task_44590",
			"inputName": "ErrorCodeIn",
			"outputName": "error",
			"converters": [
				{
					"id": "@criticalmanufacturing/connect-iot-custom-utilities-amsosram-tasks#anyToErrorCodeConstant",
					"params": {
						"ErrorCode": "StartCommandFailed",
						"ErrorNumber": 0
					}
				}
			]
		},
		{
			"id": "ed3d9217-b691-45eb-a652-6550116bbc8a",
			"sourceId": "task_15186",
			"targetId": "task_44592",
			"inputName": "$BATCHID",
			"outputName": "MaterialName"
		},
		{
			"id": "5aaf2094-7cd4-42a6-b509-96a77923e2e2",
			"sourceId": "task_15186",
			"targetId": "task_44592",
			"inputName": "activate",
			"outputName": "MaterialName"
		},
		{
			"id": "f96a094d-e969-459c-9486-fd4e33037bb4",
			"sourceId": "task_44588",
			"targetId": "task_15186",
			"inputName": "MaterialData",
			"outputName": "MaterialDataOut"
		}
	],
	"layout": {
		"general": {
			"color": "#ffff80",
			"notes": [
				{
					"id": "note_44905",
					"name": "How to use it",
					"value": "<p><strong>What it does:</strong></p><p>This Workflow should execute the Start remote command.</p><p><strong>How to use it:</strong></p><ol><li>On the Execute Command Task select the Start command to your tool;</li><li>Parse the needed information from the MaterialData object using a Expression evaluator;</li></ol><p><strong>Note:</strong></p><p>If the inputs for the command are complex enough replace parsing and command execution task with a Code task</p><p>To execute a Command via code you can use the following code snippet (contains command call and validation.</p><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><span style=\"color:#0000ff;\">const</span> remoteCommandSuccessCode = <span style=\"color:#a31515;\">\"0x00,0x04\"</span>;</div><p><span style=\"color:#0000ff;\">let</span> commandParameters: <span style=\"color:#0000ff;\">any</span>[] = [];</p><p><span style=\"color:#0000ff;\">const</span> sendMessage: Object = {</p><p><span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"S2F41\" </span>, item: { <span style=\"color:#008000;\">//replace with Stream and function intended</span></p></div><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><div style=\"margin-left:60px;\"><span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"L\"</span>, value: [</div><div style=\"margin-left:90px;\">{ <span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"A\"</span>, value: <span style=\"color:#a31515;\">\"START\"</span> }, <span style=\"color:#008000;\">//data id</span></div><div style=\"margin-left:90px;\">{ <span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"L\"</span>, value: commandParameters}</div><div style=\"margin-left:60px;\">]}</div><div style=\"margin-left:30px;\">} </div><div></div><div><span style=\"color:#0000ff;\">const</span> reply = <span style=\"color:#0000ff;\">await</span> <span style=\"color:#0000ff;\">this</span>.framework.driver.sendRaw(<span style=\"color:#a31515;\">\"connect.iot.driver.secsgem.sendMessage\"</span>, sendMessage);</div><div><span style=\"color:#0000ff;\">let</span> successFound = <span style=\"color:#0000ff;\">false</span>;</div><div><span style=\"color:#0000ff;\">for</span> (<span style=\"color:#0000ff;\">const</span> successCode <span style=\"color:#0000ff;\">of</span> remoteCommandSuccessCode.split(<span style=\"color:#a31515;\">\",\"</span>)) {</div><div style=\"margin-left:30px;\"><span style=\"color:#0000ff;\">if</span> (reply &amp;&amp; reply.item &amp;&amp; parseInt(reply.item.value[<span style=\"color:#09885a;\">0</span>].value.data) === parseInt(successCode.trim())) {</div><div style=\"margin-left:30px;\">successFound = <span style=\"color:#0000ff;\">true</span>;</div><div style=\"margin-left:30px;\"><span style=\"color:#0000ff;\">break</span>;</div><div>}</div></div>",
					"color": "#ffffa5"
				}
			]
		},
		"drawers": {
			"DIAGRAM": {
				"tasks": {
					"task_44586": {
						"collapsed": false,
						"position": {
							"x": 3410,
							"y": 798
						},
						"outdated": false
					},
					"task_44588": {
						"collapsed": false,
						"position": {
							"x": 953,
							"y": 775
						},
						"outdated": false
					},
					"task_44590": {
						"collapsed": false,
						"position": {
							"x": 2871,
							"y": 1170
						},
						"outdated": false
					},
					"task_44592": {
						"collapsed": false,
						"position": {
							"x": 2159,
							"y": 1002
						},
						"outdated": false
					},
					"task_15186": {
						"collapsed": false,
						"position": {
							"x": 1590,
							"y": 931
						},
						"outdated": false
					}
				},
				"links": {
					"task_44588_MaterialDataOut-task_44586_MaterialData": {
						"vertices": []
					},
					"task_44592_success-task_44586_success": {
						"vertices": []
					},
					"task_44592_error-task_44590_ErrorIn": {
						"vertices": []
					},
					"task_44592_error-task_44590_activate": {
						"vertices": []
					},
					"task_44590_ErrorOut-task_44586_error": {
						"vertices": []
					},
					"ed3d9217-b691-45eb-a652-6550116bbc8a": {
						"vertices": []
					},
					"5aaf2094-7cd4-42a6-b509-96a77923e2e2": {
						"vertices": []
					},
					"f96a094d-e969-459c-9486-fd4e33037bb4": {
						"vertices": []
					},
					"36aa059c-f240-4188-af93-de87c9acabdd": {
						"vertices": []
					}
				},
				"notes": {
					"note_44905": {
						"collapsed": false,
						"position": {
							"x": 1592,
							"y": 1202
						}
					}
				},
				"zoom": 0.5899999999999997,
				"pan": {
					"x": 657,
					"y": 326
				}
			}
		}
	}
}
