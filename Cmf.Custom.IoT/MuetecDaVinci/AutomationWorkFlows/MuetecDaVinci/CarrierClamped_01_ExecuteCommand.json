{
	"tasks": [
		{
			"id": "task_179236",
			"reference": {
				"name": "subWorkflowEnd",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "8.3.3-202201212"
				}
			},
			"settings": {
				"inputs": [
					{
						"name": "LoadPort",
						"valueType": {
							"friendlyName": "LoadPort",
							"type": 5,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					},
					{
						"name": "ContainerId",
						"valueType": {
							"friendlyName": "ContainerId",
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					}
				],
				"___cmf___name": "End"
			}
		},
		{
			"id": "task_179238",
			"reference": {
				"name": "subWorkflowStart",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "8.3.3-202201212"
				}
			},
			"settings": {
				"outputs": [
					{
						"name": "LoadPort",
						"valueType": {
							"type": 5,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						},
						"defaultValue": null
					},
					{
						"name": "ContainerId",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						},
						"defaultValue": null
					}
				],
				"___cmf___name": "Start"
			}
		},
		{
			"id": "task_179240",
			"reference": {
				"name": "workflow",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "8.3.3-202201212"
				}
			},
			"settings": {
				"automationWorkflow": {
					"DisplayName": "ErrorHandling",
					"IsShared": true,
					"Name": "ErrorHandling"
				},
				"executeWhenAllInputsDefined": false,
				"contextsExpirationInMilliseconds": 60000,
				"executionExpirationInMilliseconds": 1200000,
				"inputs": [
					{
						"name": "Error",
						"valueType": {
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					},
					{
						"name": "ErrorCode",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					},
					{
						"name": "ErrorText",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					},
					{
						"name": "ResourceName",
						"valueType": {
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null,
							"friendlyName": ""
						}
					},
					{
						"name": "MaterialData",
						"valueType": {
							"friendlyName": "MaterialData",
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					},
					{
						"name": "ContainerData",
						"valueType": {
							"friendlyName": "ContainerData",
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					}
				],
				"outputs": [
					{
						"name": "Error",
						"valueType": {
							"friendlyName": "Error",
							"type": 10,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					}
				],
				"___cmf___name": "Workflow",
				"___cmf___color": "#ff0000"
			}
		},
		{
			"id": "task_31772",
			"reference": {
				"name": "codeExecution",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
					"version": "8.3.3-202201212"
				}
			},
			"settings": {
				"tsCode": [
					"import { Framework } from 'framework';",
					"",
					"export default class {",
					"",
					"    /** Allows accessing external functions */",
					"    private framework: Framework;",
					"",
					"    constructor(framework: Framework) {",
					"        this.framework = framework;",
					"    }",
					"",
					"    /*",
					"     * Entry point of the class (IMPORTANT: don't change the signature of this method)",
					"     * Should return an object containing the values for each output to emit",
					"     * If necessary, use the parameter \"outputs\" to emit data while running the code.",
					"     */",
					"    public async main(inputs: any, outputs: any): Promise<any> {",
					"        // Add code here",
					"        const loadPortNumber = inputs.LoadPortNumber;",
					"        const containerId = inputs.ContainerId;",
					"        const remoteCommandSuccessCode = \"0x00,0x04\";",
					"        let commandParameters: any[] = [];",
					"        const sendMessage: Object = {",
					"            type: \"S3F17\", ",
					"            item: {",
					"                type: \"L\", value: [",
					"                    { type: \"U4\", value: 8 }, //DataID",
					"                    { type: \"A\", value: \"ProceedWithCarrier\" }, ",
					"                    { type: \"A\", value: containerId },",
					"                    { type: \"U1\", value: loadPortNumber }, ",
					"                    { type: \"L\", value: commandParameters }",
					"                ]",
					"            }",
					"        }",
					"",
					"        commandParameters.push({",
					"            type: \"L\", value: [",
					"                { type: \"A\", value: \"Capacity\" },",
					"                { type: \"U1\", value: 13 }",
					"            ]",
					"        });",
					"",
					"        commandParameters.push({",
					"            type: \"L\", value: [",
					"                { type: \"A\", value: \"SubstrateCount\" },",
					"                { type: \"U1\", value: 0 }",
					"            ]",
					"        });",
					"",
					"",
					"        const reply = await this.framework.driver.sendRaw(\"connect.iot.driver.secsgem.sendMessage\", sendMessage);",
					"        let successFound = false;",
					"        ",
					"        for (const successCode of remoteCommandSuccessCode.split(\",\")) {",
					"            if (reply && reply.item && parseInt(reply.item.value[0].value) === parseInt(successCode.trim())) {",
					"                successFound = true;",
					"                break;",
					"            }",
					"        }",
					"        ",
					"        if (!successFound) {",
					"            throw new Error(`ProceedWithCarrier failed in CarrierArrived for LP${loadPortNumber}: \\nReply:${JSON.stringify(reply)}`);",
					"        }",
					"        // emit output during execution: outputs.output1.emit(\"something\");",
					"        // return example: return { output1: inputs.input1, output2: \"Hello World\" };",
					"    }",
					"}",
					""
				],
				"jsCodeBase64": "T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNsYXNzIGRlZmF1bHRfMSB7DQogICAgY29uc3RydWN0b3IoZnJhbWV3b3JrKSB7DQogICAgICAgIHRoaXMuZnJhbWV3b3JrID0gZnJhbWV3b3JrOw0KICAgIH0NCiAgICAvKg0KICAgICAqIEVudHJ5IHBvaW50IG9mIHRoZSBjbGFzcyAoSU1QT1JUQU5UOiBkb24ndCBjaGFuZ2UgdGhlIHNpZ25hdHVyZSBvZiB0aGlzIG1ldGhvZCkNCiAgICAgKiBTaG91bGQgcmV0dXJuIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSB2YWx1ZXMgZm9yIGVhY2ggb3V0cHV0IHRvIGVtaXQNCiAgICAgKiBJZiBuZWNlc3NhcnksIHVzZSB0aGUgcGFyYW1ldGVyICJvdXRwdXRzIiB0byBlbWl0IGRhdGEgd2hpbGUgcnVubmluZyB0aGUgY29kZS4NCiAgICAgKi8NCiAgICBhc3luYyBtYWluKGlucHV0cywgb3V0cHV0cykgew0KICAgICAgICAvLyBBZGQgY29kZSBoZXJlDQogICAgICAgIGNvbnN0IGxvYWRQb3J0TnVtYmVyID0gaW5wdXRzLkxvYWRQb3J0TnVtYmVyOw0KICAgICAgICBjb25zdCBjb250YWluZXJJZCA9IGlucHV0cy5Db250YWluZXJJZDsNCiAgICAgICAgY29uc3QgcmVtb3RlQ29tbWFuZFN1Y2Nlc3NDb2RlID0gIjB4MDAsMHgwNCI7DQogICAgICAgIGxldCBjb21tYW5kUGFyYW1ldGVycyA9IFtdOw0KICAgICAgICBjb25zdCBzZW5kTWVzc2FnZSA9IHsNCiAgICAgICAgICAgIHR5cGU6ICJTM0YxNyIsDQogICAgICAgICAgICBpdGVtOiB7DQogICAgICAgICAgICAgICAgdHlwZTogIkwiLCB2YWx1ZTogWw0KICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICJVNCIsIHZhbHVlOiA4IH0sDQogICAgICAgICAgICAgICAgICAgIHsgdHlwZTogIkEiLCB2YWx1ZTogIlByb2NlZWRXaXRoQ2FycmllciIgfSwNCiAgICAgICAgICAgICAgICAgICAgeyB0eXBlOiAiQSIsIHZhbHVlOiBjb250YWluZXJJZCB9LA0KICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICJVMSIsIHZhbHVlOiBsb2FkUG9ydE51bWJlciB9LA0KICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICJMIiwgdmFsdWU6IGNvbW1hbmRQYXJhbWV0ZXJzIH0NCiAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICB9DQogICAgICAgIH07DQogICAgICAgIGNvbW1hbmRQYXJhbWV0ZXJzLnB1c2goew0KICAgICAgICAgICAgdHlwZTogIkwiLCB2YWx1ZTogWw0KICAgICAgICAgICAgICAgIHsgdHlwZTogIkEiLCB2YWx1ZTogIkNhcGFjaXR5IiB9LA0KICAgICAgICAgICAgICAgIHsgdHlwZTogIlUxIiwgdmFsdWU6IDEzIH0NCiAgICAgICAgICAgIF0NCiAgICAgICAgfSk7DQogICAgICAgIGNvbW1hbmRQYXJhbWV0ZXJzLnB1c2goew0KICAgICAgICAgICAgdHlwZTogIkwiLCB2YWx1ZTogWw0KICAgICAgICAgICAgICAgIHsgdHlwZTogIkEiLCB2YWx1ZTogIlN1YnN0cmF0ZUNvdW50IiB9LA0KICAgICAgICAgICAgICAgIHsgdHlwZTogIlUxIiwgdmFsdWU6IDAgfQ0KICAgICAgICAgICAgXQ0KICAgICAgICB9KTsNCiAgICAgICAgY29uc3QgcmVwbHkgPSBhd2FpdCB0aGlzLmZyYW1ld29yay5kcml2ZXIuc2VuZFJhdygiY29ubmVjdC5pb3QuZHJpdmVyLnNlY3NnZW0uc2VuZE1lc3NhZ2UiLCBzZW5kTWVzc2FnZSk7DQogICAgICAgIGxldCBzdWNjZXNzRm91bmQgPSBmYWxzZTsNCiAgICAgICAgZm9yIChjb25zdCBzdWNjZXNzQ29kZSBvZiByZW1vdGVDb21tYW5kU3VjY2Vzc0NvZGUuc3BsaXQoIiwiKSkgew0KICAgICAgICAgICAgaWYgKHJlcGx5ICYmIHJlcGx5Lml0ZW0gJiYgcGFyc2VJbnQocmVwbHkuaXRlbS52YWx1ZVswXS52YWx1ZSkgPT09IHBhcnNlSW50KHN1Y2Nlc3NDb2RlLnRyaW0oKSkpIHsNCiAgICAgICAgICAgICAgICBzdWNjZXNzRm91bmQgPSB0cnVlOw0KICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmICghc3VjY2Vzc0ZvdW5kKSB7DQogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFByb2NlZWRXaXRoQ2FycmllciBmYWlsZWQgaW4gQ2FycmllckFycml2ZWQgZm9yIExQJHtsb2FkUG9ydE51bWJlcn06IFxuUmVwbHk6JHtKU09OLnN0cmluZ2lmeShyZXBseSl9YCk7DQogICAgICAgIH0NCiAgICAgICAgLy8gZW1pdCBvdXRwdXQgZHVyaW5nIGV4ZWN1dGlvbjogb3V0cHV0cy5vdXRwdXQxLmVtaXQoInNvbWV0aGluZyIpOw0KICAgICAgICAvLyByZXR1cm4gZXhhbXBsZTogcmV0dXJuIHsgb3V0cHV0MTogaW5wdXRzLmlucHV0MSwgb3V0cHV0MjogIkhlbGxvIFdvcmxkIiB9Ow0KICAgIH0NCn0NCmV4cG9ydHMuZGVmYXVsdCA9IGRlZmF1bHRfMTsNCg==",
				"inputs": [
					{
						"name": "LoadPortNumber",
						"valueType": {
							"friendlyName": "LoadPortNumber",
							"type": 5,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					},
					{
						"name": "ContainerId",
						"valueType": {
							"friendlyName": "ContainerId",
							"type": 4,
							"collectionType": 0,
							"referenceType": null,
							"referenceTypeName": null,
							"referenceTypeId": null
						}
					}
				],
				"outputs": [],
				"contextExpirationInMilliseconds": 10000,
				"executionExpirationInMilliseconds": 0,
				"___cmf___name": "Code"
			},
			"driver": "SecsGemEquipment"
		}
	],
	"converters": [
		{
			"id": "@criticalmanufacturing/connect-iot-custom-utilities-amsosram-tasks#anyToErrorCodeConstant",
			"reference": {
				"name": "anyToErrorCodeConstant",
				"package": {
					"name": "@criticalmanufacturing/connect-iot-custom-utilities-amsosram-tasks",
					"version": "1.0.0"
				}
			}
		}
	],
	"links": [
		{
			"id": "task_179240_ErrorOut-task_179236_error",
			"sourceId": "task_179240",
			"targetId": "task_179236",
			"inputName": "error",
			"outputName": "ErrorOut",
			"converters": []
		},
		{
			"id": "494235fa-7079-47e9-8f74-1af4802b7a01",
			"sourceId": "task_179238",
			"targetId": "task_179236",
			"inputName": "LoadPort",
			"outputName": "LoadPortOut"
		},
		{
			"id": "8dfced7f-b826-4978-b295-2cd75167dea9",
			"sourceId": "task_179238",
			"targetId": "task_179236",
			"inputName": "ContainerId",
			"outputName": "ContainerIdOut"
		},
		{
			"id": "57943f5d-667b-4a3f-8842-5506c9ac3062",
			"sourceId": "task_179238",
			"targetId": "task_31772",
			"inputName": "LoadPortNumberIn",
			"outputName": "LoadPortOut"
		},
		{
			"id": "1bc367b3-d780-46af-a57b-e5c9410c8ddd",
			"sourceId": "task_179238",
			"targetId": "task_31772",
			"inputName": "activate",
			"outputName": "activateOut"
		},
		{
			"id": "763e0fc2-69a1-47a7-ba95-bfba8b1e3043",
			"sourceId": "task_31772",
			"targetId": "task_179240",
			"inputName": "ErrorIn",
			"outputName": "error"
		},
		{
			"id": "395dd2f9-1198-4552-a09a-36dec78ed441",
			"sourceId": "task_31772",
			"targetId": "task_179240",
			"inputName": "activate",
			"outputName": "error"
		},
		{
			"id": "013b1e0f-dde9-410e-949b-adc5682cb058",
			"sourceId": "task_31772",
			"targetId": "task_179236",
			"inputName": "success",
			"outputName": "success"
		},
		{
			"id": "ad432650-05f8-48db-88d9-4123e3f69da7",
			"sourceId": "task_31772",
			"targetId": "task_179240",
			"inputName": "ErrorCodeIn",
			"outputName": "error",
			"converters": [
				{
					"id": "@criticalmanufacturing/connect-iot-custom-utilities-amsosram-tasks#anyToErrorCodeConstant",
					"params": {
						"ErrorCode": "CarrierFailedToClamp",
						"SystemOfOrigin": "EI",
						"ErrorNumber": 0
					}
				}
			]
		},
		{
			"id": "d9a102cd-ca80-45a3-ab08-41d574ec8ada",
			"sourceId": "task_179238",
			"targetId": "task_31772",
			"inputName": "ContainerIdIn",
			"outputName": "ContainerIdOut"
		}
	],
	"layout": {
		"general": {
			"color": "#ffff80",
			"notes": [
				{
					"id": "note_179244",
					"name": "How to use it",
					"value": "<p><strong>What it does:</strong></p><p>This Workflow should execute the Carrier Clamped remote command.</p><p><strong>How to use it:</strong></p><ol><li>On the Execute Command Task select the&nbsp;Carrier Clamped command to your tool;</li></ol><p><strong>Note:</strong></p><p>If the inputs for the command are complex enough replace parsing and command execution task with a Code task</p><p>To execute a Command via code you can use the following code snippet (contains command call and validation.</p><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><span style=\"color:#0000ff;\">const</span> remoteCommandSuccessCode = <span style=\"color:#a31515;\">\"0x00,0x04\"</span>;</div><p><span style=\"color:#0000ff;\">let</span> commandParameters: <span style=\"color:#0000ff;\">any</span>[] = [];</p><p><span style=\"color:#0000ff;\">const</span> sendMessage: Object = {</p><p><span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"S2F41\" </span>, item: { <span style=\"color:#008000;\">//replace with Stream and function intended</span></p></div><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><div style=\"margin-left:60px;\"><span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"L\"</span>, value: [</div><div style=\"margin-left:90px;\">{ <span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"A\"</span>, value: <span style=\"color:#a31515;\">\"CLAMPED\"</span> }, <span style=\"color:#008000;\">//data id</span></div><div style=\"margin-left:90px;\">{ <span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"L\"</span>, value: commandParameters}</div><div style=\"margin-left:60px;\">]}</div><div style=\"margin-left:30px;\">} </div><div></div><div><span style=\"color:#0000ff;\">const</span> reply = <span style=\"color:#0000ff;\">await</span> <span style=\"color:#0000ff;\">this</span>.framework.driver.sendRaw(<span style=\"color:#a31515;\">\"connect.iot.driver.secsgem.sendMessage\"</span>, sendMessage);</div><div><span style=\"color:#0000ff;\">let</span> successFound = <span style=\"color:#0000ff;\">false</span>;</div><div><span style=\"color:#0000ff;\">for</span> (<span style=\"color:#0000ff;\">const</span> successCode <span style=\"color:#0000ff;\">of</span> remoteCommandSuccessCode.split(<span style=\"color:#a31515;\">\",\"</span>)) {</div><div style=\"margin-left:30px;\"><span style=\"color:#0000ff;\">if</span> (reply &amp;&amp; reply.item &amp;&amp; parseInt(reply.item.value[<span style=\"color:#09885a;\">0</span>].value.data) === parseInt(successCode.trim())) {</div><div style=\"margin-left:30px;\">successFound = <span style=\"color:#0000ff;\">true</span>;</div><div style=\"margin-left:30px;\"><span style=\"color:#0000ff;\">break</span>;</div><div>}</div></div>",
					"color": "#ffffa5"
				}
			]
		},
		"drawers": {
			"DIAGRAM": {
				"tasks": {
					"task_179236": {
						"collapsed": false,
						"position": {
							"x": 3410,
							"y": 798
						},
						"outdated": false
					},
					"task_179238": {
						"collapsed": false,
						"position": {
							"x": 952,
							"y": 775
						},
						"outdated": false
					},
					"task_179240": {
						"collapsed": false,
						"position": {
							"x": 2830,
							"y": 1189
						},
						"outdated": false
					},
					"task_31772": {
						"collapsed": false,
						"position": {
							"x": 2032,
							"y": 991
						},
						"outdated": false
					}
				},
				"links": {
					"task_179240_ErrorOut-task_179236_error": {
						"vertices": []
					},
					"494235fa-7079-47e9-8f74-1af4802b7a01": {
						"vertices": []
					},
					"8dfced7f-b826-4978-b295-2cd75167dea9": {
						"vertices": []
					},
					"57943f5d-667b-4a3f-8842-5506c9ac3062": {
						"vertices": []
					},
					"1bc367b3-d780-46af-a57b-e5c9410c8ddd": {
						"vertices": []
					},
					"763e0fc2-69a1-47a7-ba95-bfba8b1e3043": {
						"vertices": []
					},
					"395dd2f9-1198-4552-a09a-36dec78ed441": {
						"vertices": []
					},
					"013b1e0f-dde9-410e-949b-adc5682cb058": {
						"vertices": []
					},
					"d9a102cd-ca80-45a3-ab08-41d574ec8ada": {
						"vertices": []
					},
					"ad432650-05f8-48db-88d9-4123e3f69da7": {
						"vertices": []
					}
				},
				"notes": {
					"note_179244": {
						"collapsed": false,
						"position": {
							"x": 1534,
							"y": 1236
						}
					}
				},
				"zoom": 0.6899999999999998,
				"pan": {
					"x": 1172,
					"y": 510
				}
			}
		}
	}
}