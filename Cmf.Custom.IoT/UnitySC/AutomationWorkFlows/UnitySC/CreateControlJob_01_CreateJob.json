{
  "tasks": [
    {
      "id": "task_169100",
      "reference": {
        "name": "subWorkflowEnd",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "inputs": [
          {
            "name": "MaterialData",
            "valueType": {
              "friendlyName": "MaterialData",
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null
            }
          }
        ]
      }
    },
    {
      "id": "task_169102",
      "reference": {
        "name": "subWorkflowStart",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "outputs": [
          {
            "name": "MaterialData",
            "valueType": {
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            },
            "defaultValue": null
          }
        ],
        "___cmf___name": "Start"
      }
    },
    {
      "id": "task_169104",
      "reference": {
        "name": "workflow",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "automationWorkflow": {
          "DisplayName": "ErrorHandling",
          "IsShared": true,
          "Name": "ErrorHandling"
        },
        "executeWhenAllInputsDefined": false,
        "contextsExpirationInMilliseconds": 60000,
        "executionExpirationInMilliseconds": 1200000,
        "inputs": [
          {
            "name": "Error",
            "valueType": {
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          },
          {
            "name": "ErrorCode",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          },
          {
            "name": "ErrorText",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          },
          {
            "name": "ResourceName",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          },
          {
            "name": "MaterialData",
            "valueType": {
              "friendlyName": "MaterialData",
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null
            }
          },
          {
            "name": "ContainerData",
            "valueType": {
              "friendlyName": "ContainerData",
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null
            }
          }
        ],
        "outputs": [
          {
            "name": "Error",
            "valueType": {
              "friendlyName": "Error",
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null
            }
          }
        ],
        "___cmf___name": "Workflow",
        "___cmf___color": "#ff0000"
      }
    },
    {
      "id": "task_126582",
      "reference": {
        "name": "codeExecution",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "tsCode": [
          "import { Framework } from 'framework';",
          "",
          "export default class {",
          "",
          "    /** Allows accessing external functions */",
          "    private framework: Framework;",
          "",
          "    constructor(framework: Framework) {",
          "        this.framework = framework;",
          "    }",
          "",
          "    /*",
          "     * Entry point of the class (IMPORTANT: don't change the signature of this method)",
          "     * Should return an object containing the values for each output to emit",
          "     * If necessary, use the parameter \"outputs\" to emit data while running the code.",
          "     */",
          "    public async main(inputs: any, outputs: any): Promise<any> {",
          "        // Add code here",
          "        const materialData = inputs.MaterialData;",
          "        const useCarrierAtLoadPortAsContainer: boolean = false;",
          "        const controlJobIdentifier: string = undefined;",
          "        const dataCollectionPlan: any = undefined;",
          "        const mtrlOutByStatus: any = undefined;",
          "        const pauseEvent: any = undefined;",
          "        const processingControlSpecification: any = undefined;",
          "        const startMethod: boolean = true;",
          "        const objectSpec: string = \"Equipment\";",
          "        const processOrderMgmt: number = 3;",
          "        let materialMovement: any[] = [];",
          "        ",
          "        let material: any;",
          "        if (Array.isArray(materialData)) {",
          "            material = materialData[0];",
          "        } else {",
          "            material = materialData;",
          "        }",
          "",
          "        // calculate MaterialOutSpec based on input or sorter job information (if existing) and calculate Carrier Input Spec",
          "        const carrierInputSpec: any[] = [];",
          "",
          "        /*",
          "        if (!materialMovement) {",
          "            materialMovement = [];",
          "             ",
          "            if (material.ContainerName) { // if no container used, spec allows for empty list",
          "                // if no sorter job exists push Container name to Carrier Input Spec",
          "                carrierInputSpec.push({",
          "                    type: \"A\", value: (useCarrierAtLoadPortAsContainer ?",
          "                        `CarrierAtLoadPort${material.LoadPortPosition}` : material.ContainerName)",
          "                }) // Carrier Name                ",
          "            }",
          "        }",
          "        */",
          "",
          "        material.ControlJobId = controlJobIdentifier ? controlJobIdentifier : `CtrlJob_${material.MaterialName}`;",
          "        ",
          "        const objectContent = [];",
          "        objectContent.push({",
          "            type: \"L\", value: [",
          "                { type: \"A\", value: \"ObjID\" }, // Control Job Id",
          "                { type: \"A\", value: material.ControlJobId }, // Host defined identifier of the control job.",
          "            ]",
          "        });",
          "",
          "        //if (dataCollectionPlan) { // not mandatory per E94 standard",
          "            objectContent.push({",
          "                type: \"L\", value: [",
          "                    { type: \"A\", value: \"DataCollectionPlan\" }, // Data Collection Plan",
          "                    { type: \"A\", value: \"None\" },",
          "                    // Identifier for a data collection plan to be used during execution of the control job.",
          "                ]",
          "            });",
          "        //}",
          "",
          "        objectContent.push({",
          "            type: \"L\", value: [",
          "                { type: \"A\", value: \"CarrierInputSpec\" }, // Carrier Inputs",
          "                {",
          "                    // A list of carrierID for material that will be used by the ControlJob.",
          "                    // An empty list is allowed.",
          "                    type: \"L\", value: carrierInputSpec",
          "                }",
          "            ]",
          "        });",
          "",
          "        objectContent.push({",
          "            type: \"L\", value: [",
          "                { type: \"A\", value: \"MtrlOutSpec\" }, // material movement Inputs",
          "                { type: \"L\", value: materialMovement },  // Maps material from source to destination after processing.",
          "                // For uni-carrier operation, the list shall be empty.",
          "                // The list shall also be empty, if CarrierInputSpec is an empty list",
          "            ]",
          "        });",
          "",
          "        if (mtrlOutByStatus) { // not mandatory per E94 standard",
          "            objectContent.push({",
          "                type: \"L\", value: [",
          "                    { type: \"A\", value: \"MtrlOutByStatus\" }, // Material Output by status",
          "                    { type: \"L\", value: mtrlOutByStatus }, // List structure which maps locations or Carriers",
          "                    // where processed material will be placed based on material status",
          "                ]",
          "            });",
          "        }",
          "",
          "        if (pauseEvent) { // not mandatory per E94 standard",
          "            objectContent.push({",
          "                type: \"L\", value: [",
          "                    { type: \"A\", value: \"PauseEvent\" }, // Pause Event",
          "                    { type: \"L\", value: pauseEvent }, // Identifier of a list of events on which the Control Job shall PAUSE.",
          "                ]",
          "            });",
          "        }",
          "",
          "        if (processingControlSpecification) {",
          "            objectContent.push({",
          "                type: \"L\", value: [",
          "                    { type: \"A\", value: \"ProcessingCtrlSpec\" }, // Carrier Inputs",
          "                    {",
          "                        // A list of structures that defines the process jobs and rules for running each that will be run within this ControlJob.",
          "                        type: \"L\", value: processingControlSpecification",
          "                    }]",
          "            });",
          "        } else {",
          "            objectContent.push({",
          "                type: \"L\", value: [",
          "                    { type: \"A\", value: \"ProcessingCtrlSpec\" }, // Carrier Inputs",
          "                    {",
          "                        // A list of structures that defines the process jobs and rules for running each that will be run within this ControlJob.",
          "                        type: \"L\", value: [{",
          "                            type: \"L\", value: [",
          "                                { type: \"A\", value: material.ProcessJobId },",
          "                                { type: \"L\", value: [] },",
          "                                { type: \"L\", value: [] },",
          "                            ]",
          "                        }]",
          "                    },",
          "                ]",
          "            })",
          "        }",
          "        objectContent.push({",
          "            type: \"L\", value: [",
          "                { type: \"A\", value: \"ProcessOrderMgmt\" }, // ProcessOrderMgmt",
          "                { type: \"U1\", value: processOrderMgmt }, // Define the method for the order in which process  jobs are initiated (currently only 1)",
          "                // possible values of Enum: LIST, ARRIVAL, OPTIMIZE",
          "            ]",
          "        });",
          "        objectContent.push({",
          "            type: \"L\", value: [",
          "                { type: \"A\", value: \"StartMethod\" }, // Start Method",
          "                { type: \"BO\", value: startMethod }, // A logical flag that determines if the ControlJob can start automatically",
          "            ]",
          "        });",
          "",
          "        const sendMessage: Object = {",
          "            type: \"S14F9\", item: {",
          "                type: \"L\", value: [",
          "                    { type: \"A\", value: objectSpec }, // object Specification (E39 Structured Text)",
          "                    { type: \"A\", value: \"ControlJob\" }, // type of object",
          "                    { type: \"L\", value: objectContent }, // structure",
          "                ]",
          "            }",
          "        }",
          "",
          "        const reply = await this.framework.driver.sendRaw(\"connect.iot.driver.secsgem.sendMessage\", sendMessage);",
          "        let successFound = false;",
          "",
          "        if (reply && reply.item && parseInt(reply.item.value[2].value[0].value) === 0) {",
          "            successFound = true;",
          "        }",
          "        if (!successFound) {",
          "            const error = new Error(`EI: Create Control Job failed. Error ${reply.item.value[2].value[1].value[0].value[0].value.toString()} - ${reply.item.value[2].value[1].value[0].value[1].value.toString()}`);",
          "            throw error;",
          "        }",
          "",
          "        return {",
          "            MaterialData: materialData",
          "        };",
          "    }",
          "}",
          ""
        ],
        "jsCodeBase64": "",
        "inputs": [
          {
            "name": "MaterialData",
            "valueType": {
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            },
            "defaultValue": {}
          }
        ],
        "outputs": [
          {
            "name": "MaterialData",
            "valueType": {
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": "Material Data"
            },
            "defaultValue": null
          }
        ],
        "contextExpirationInMilliseconds": 10000,
        "executionExpirationInMilliseconds": 0,
        "___cmf___name": "Code"
      },
      "driver": "SecsGemEquipment"
    }
  ],
  "converters": [
    {
      "id": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks#anyToConstant",
      "reference": {
        "name": "anyToConstant",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      }
    },
    {
      "id": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks#anyToAny",
      "reference": {
        "name": "anyToAny",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      }
    }
  ],
  "links": [
    {
      "id": "task_169104_ErrorOut-task_169100_error",
      "sourceId": "task_169104",
      "targetId": "task_169100",
      "inputName": "error",
      "outputName": "ErrorOut",
      "converters": []
    },
    {
      "id": "4334e1a1-dd01-4e5f-8633-a816a7a390ee",
      "sourceId": "task_169102",
      "targetId": "task_169104",
      "inputName": "MaterialDataIn",
      "outputName": "MaterialDataOut"
    },
    {
      "id": "4b58c0aa-7027-4365-95a9-4198c23cba1d",
      "sourceId": "task_169102",
      "targetId": "task_126582",
      "inputName": "MaterialDataIn",
      "outputName": "MaterialDataOut"
    },
    {
      "id": "1ea9f7e1-cbf0-4b3f-b9b6-c0eaf3c7fac2",
      "sourceId": "task_169102",
      "targetId": "task_126582",
      "inputName": "activate",
      "outputName": "activateOut"
    },
    {
      "id": "d692c69f-b267-4cbb-9312-838d9e42f46d",
      "sourceId": "task_126582",
      "targetId": "task_169100",
      "inputName": "MaterialData",
      "outputName": "MaterialDataOut"
    },
    {
      "id": "af7533cd-b8a8-48a4-bb42-50fecdd3e7b8",
      "sourceId": "task_126582",
      "targetId": "task_169100",
      "inputName": "success",
      "outputName": "MaterialDataOut",
      "converters": [
        {
          "id": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks#anyToAny",
          "params": {}
        }
      ]
    },
    {
      "id": "9df1488f-8fe3-4d5d-b5f9-bdafbdf9f94b",
      "sourceId": "task_126582",
      "targetId": "task_169104",
      "inputName": "ErrorIn",
      "outputName": "error"
    },
    {
      "id": "252c5ad7-cc60-449f-85f1-f32418dab1d2",
      "sourceId": "task_126582",
      "targetId": "task_169104",
      "inputName": "activate",
      "outputName": "error"
    }
  ],
  "layout": {
    "general": {
      "color": "#ffff80",
      "notes": []
    },
    "drawers": {
      "DIAGRAM": {
        "tasks": {
          "task_169100": {
            "collapsed": false,
            "position": {
              "x": 2039,
              "y": 511
            },
            "outdated": false
          },
          "task_169102": {
            "collapsed": false,
            "position": {
              "x": 418,
              "y": 509
            },
            "outdated": false
          },
          "task_169104": {
            "collapsed": false,
            "position": {
              "x": 1547,
              "y": 789
            },
            "outdated": false
          },
          "task_126582": {
            "collapsed": false,
            "position": {
              "x": 1045,
              "y": 515
            },
            "outdated": false
          }
        },
        "links": {
          "task_169104_ErrorOut-task_169100_error": {
            "vertices": []
          },
          "4334e1a1-dd01-4e5f-8633-a816a7a390ee": {
            "vertices": [
              {
                "x": 943,
                "y": 670
              },
              {
                "x": 1148,
                "y": 1038
              }
            ]
          },
          "4b58c0aa-7027-4365-95a9-4198c23cba1d": {
            "vertices": []
          },
          "1ea9f7e1-cbf0-4b3f-b9b6-c0eaf3c7fac2": {
            "vertices": []
          },
          "d692c69f-b267-4cbb-9312-838d9e42f46d": {
            "vertices": []
          },
          "9df1488f-8fe3-4d5d-b5f9-bdafbdf9f94b": {
            "vertices": []
          },
          "252c5ad7-cc60-449f-85f1-f32418dab1d2": {
            "vertices": []
          },
          "af7533cd-b8a8-48a4-bb42-50fecdd3e7b8": {
            "vertices": []
          }
        },
        "notes": {},
        "zoom": 0.7499999999999998,
        "pan": {
          "x": 313.5,
          "y": 381.75
        }
      }
    }
  }
}