{
  "tasks": [
    {
      "id": "task_28709",
      "reference": {
        "name": "subWorkflowStart",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "outputs": [
          {
            "name": "MaterialData",
            "valueType": {
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            },
            "defaultValue": null
          }
        ],
        "___cmf___name": "Start"
      }
    },
    {
      "id": "task_28781",
      "reference": {
        "name": "subWorkflowEnd",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "inputs": [
          {
            "name": "MaterialData",
            "valueType": {
              "friendlyName": "MaterialData",
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null
            }
          }
        ]
      }
    },
    {
      "id": "task_29125",
      "reference": {
        "name": "equipmentCommand",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "_inputs": [
          {
            "parameter": {
              "$type": "Cmf.Foundation.BusinessObjects.AutomationCommandParameter, Cmf.Foundation.BusinessObjects",
              "Name": "VCE",
              "DataType": 0
            },
            "dataType": "String"
          },
          {
            "parameter": {
              "$type": "Cmf.Foundation.BusinessObjects.AutomationCommandParameter, Cmf.Foundation.BusinessObjects",
              "Name": "LOTID",
              "DataType": 0
            },
            "dataType": "String"
          },
          {
            "parameter": {
              "$type": "Cmf.Foundation.BusinessObjects.AutomationCommandParameter, Cmf.Foundation.BusinessObjects",
              "Name": "RECIPE",
              "DataType": 0
            },
            "dataType": "String"
          }
        ],
        "_command": {
          "$type": "Cmf.Foundation.BusinessObjects.AutomationCommand, Cmf.Foundation.BusinessObjects",
          "Name": "PP-SELECT"
        },
        "___cmf___name": "Execute Equipment Command",
        "___cmf___description": "PP-SELECT"
      },
      "driver": "SecsGemEquipment"
    },
    {
      "id": "task_29612",
      "reference": {
        "name": "workflow",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "automationWorkflow": {
          "DisplayName": "ErrorHandling",
          "IsShared": true,
          "Name": "ErrorHandling"
        },
        "executeWhenAllInputsDefined": false,
        "contextsExpirationInMilliseconds": 60000,
        "executionExpirationInMilliseconds": 1200000,
        "inputs": [
          {
            "name": "Error",
            "valueType": {
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          },
          {
            "name": "ErrorCode",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          },
          {
            "name": "ErrorText",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          },
          {
            "name": "ResourceName",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": ""
            }
          }
        ],
        "outputs": [
          {
            "name": "Error",
            "valueType": {
              "friendlyName": "Error",
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null
            }
          }
        ],
        "___cmf___name": "Workflow",
        "___cmf___color": "#ff0000"
      }
    },
    {
      "id": "task_15312",
      "reference": {
        "name": "codeExecution",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      },
      "settings": {
        "tsCode": [
          "import { Framework } from 'framework';",
          "",
          "export default class {",
          "",
          "    /** Allows accessing external functions */",
          "    private framework: Framework;",
          "",
          "    constructor(framework: Framework) {",
          "        this.framework = framework;",
          "    }",
          "",
          "    /*",
          "     * Entry point of the class (IMPORTANT: don't change the signature of this method)",
          "     * Should return an object containing the values for each output to emit",
          "     * If necessary, use the parameter \"outputs\" to emit data while running the code.",
          "     */",
          "    public async main(inputs: any, outputs: any): Promise<any> {",
          "        // Add code here",
          "        const materialData = inputs.MaterialData[0];",
          "        const PortID = materialData.LoadPortPosition;",
          "        const lotName = materialData.MaterialName;",
          "        const recipeId = materialData.Recipe.NameOnEquipment;",
          "",
          "        return {",
          "            PORT_ID: PortID === \"1\" ? \"A\" : PortID === \"2\" ? \"B\" : null,",
          "            PPID: recipeId,",
          "            LOT_ID: lotName",
          "        };",
          "",
          "",
          "",
          "    }",
          "}",
          ""
        ],
        "jsCodeBase64": "T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNsYXNzIGRlZmF1bHRfMSB7DQogICAgY29uc3RydWN0b3IoZnJhbWV3b3JrKSB7DQogICAgICAgIHRoaXMuZnJhbWV3b3JrID0gZnJhbWV3b3JrOw0KICAgIH0NCiAgICAvKg0KICAgICAqIEVudHJ5IHBvaW50IG9mIHRoZSBjbGFzcyAoSU1QT1JUQU5UOiBkb24ndCBjaGFuZ2UgdGhlIHNpZ25hdHVyZSBvZiB0aGlzIG1ldGhvZCkNCiAgICAgKiBTaG91bGQgcmV0dXJuIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSB2YWx1ZXMgZm9yIGVhY2ggb3V0cHV0IHRvIGVtaXQNCiAgICAgKiBJZiBuZWNlc3NhcnksIHVzZSB0aGUgcGFyYW1ldGVyICJvdXRwdXRzIiB0byBlbWl0IGRhdGEgd2hpbGUgcnVubmluZyB0aGUgY29kZS4NCiAgICAgKi8NCiAgICBhc3luYyBtYWluKGlucHV0cywgb3V0cHV0cykgew0KICAgICAgICAvLyBBZGQgY29kZSBoZXJlDQogICAgICAgIGNvbnN0IG1hdGVyaWFsRGF0YSA9IGlucHV0cy5NYXRlcmlhbERhdGFbMF07DQogICAgICAgIGNvbnN0IFBvcnRJRCA9IG1hdGVyaWFsRGF0YS5Mb2FkUG9ydFBvc2l0aW9uOw0KICAgICAgICBjb25zdCBsb3ROYW1lID0gbWF0ZXJpYWxEYXRhLk1hdGVyaWFsTmFtZTsNCiAgICAgICAgY29uc3QgcmVjaXBlSWQgPSBtYXRlcmlhbERhdGEuUmVjaXBlLk5hbWVPbkVxdWlwbWVudDsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIFBPUlRfSUQ6IFBvcnRJRCA9PT0gIjEiID8gIkEiIDogUG9ydElEID09PSAiMiIgPyAiQiIgOiBudWxsLA0KICAgICAgICAgICAgUFBJRDogcmVjaXBlSWQsDQogICAgICAgICAgICBMT1RfSUQ6IGxvdE5hbWUNCiAgICAgICAgfTsNCiAgICB9DQp9DQpleHBvcnRzLmRlZmF1bHQgPSBkZWZhdWx0XzE7DQo=",
        "inputs": [
          {
            "name": "MaterialData",
            "valueType": {
              "type": 10,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": "MaterialData"
            },
            "defaultValue": null
          }
        ],
        "outputs": [
          {
            "name": "PORT_ID",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": "PORT_ID"
            },
            "defaultValue": null
          },
          {
            "name": "LOT_ID",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": "LOT_ID"
            },
            "defaultValue": null
          },
          {
            "name": "PPID",
            "valueType": {
              "type": 4,
              "collectionType": 0,
              "referenceType": null,
              "referenceTypeName": null,
              "referenceTypeId": null,
              "friendlyName": "PPID"
            },
            "defaultValue": null
          }
        ],
        "contextExpirationInMilliseconds": 10000,
        "executionExpirationInMilliseconds": 0,
        "___cmf___name": "Code"
      }
    }
  ],
  "converters": [
    {
      "id": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks#objectProperty",
      "reference": {
        "name": "objectProperty",
        "package": {
          "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
          "version": "9.1.0-202209072"
        }
      }
    }
  ],
  "links": [
    {
      "id": "ccb69b57-6ab4-4c00-a904-d6df674c72da",
      "sourceId": "task_28709",
      "targetId": "task_28781",
      "inputName": "MaterialData",
      "outputName": "MaterialDataOut"
    },
    {
      "id": "b260a3fc-f985-4c28-858e-adf58fafa104",
      "sourceId": "task_29125",
      "targetId": "task_28781",
      "inputName": "success",
      "outputName": "success"
    },
    {
      "id": "2defb049-ec4c-4731-b04f-57a331a9ee0f",
      "sourceId": "task_29125",
      "targetId": "task_29612",
      "inputName": "ErrorIn",
      "outputName": "error"
    },
    {
      "id": "430557b5-0ee3-4d86-b7a3-8caf28ce7cbe",
      "sourceId": "task_29125",
      "targetId": "task_29612",
      "inputName": "activate",
      "outputName": "error"
    },
    {
      "id": "a2e0d65f-1dac-4282-919b-d2f36d569e00",
      "sourceId": "task_29612",
      "targetId": "task_28781",
      "inputName": "error",
      "outputName": "ErrorOut"
    },
    {
      "id": "63201362-690f-4fa3-80d2-e45b8b162fbe",
      "sourceId": "task_28709",
      "targetId": "task_15312",
      "inputName": "MaterialDataIn",
      "outputName": "MaterialDataOut"
    },
    {
      "id": "be48b026-0b4c-4093-b26b-ab716964bab6",
      "sourceId": "task_28709",
      "targetId": "task_15312",
      "inputName": "activate",
      "outputName": "MaterialDataOut"
    },
    {
      "id": "0d990a13-71a4-4d07-a2f9-340838e81f8f",
      "sourceId": "task_15312",
      "targetId": "task_29125",
      "inputName": "activate",
      "outputName": "success"
    },
    {
      "id": "8caa456d-27d1-43e3-8f4f-26e2835deb96",
      "sourceId": "task_15312",
      "targetId": "task_29125",
      "inputName": "$VCE",
      "outputName": "PORT_IDOut"
    },
    {
      "id": "0622fa03-d283-40a8-8813-29a48cea5d60",
      "sourceId": "task_15312",
      "targetId": "task_29125",
      "inputName": "$LOTID",
      "outputName": "LOT_IDOut"
    },
    {
      "id": "e5d13420-c04e-4073-8497-da7e5873725a",
      "sourceId": "task_15312",
      "targetId": "task_29125",
      "inputName": "$RECIPE",
      "outputName": "PPIDOut"
    }
  ],
  "layout": {
    "general": {
      "color": "#ffff80",
      "notes": [
        {
          "id": "note_31411",
          "name": "How to use it",
          "value": "<p><strong>What it does:</strong></p><p>This Workflow should execute the PP-Select remote command.</p><p><strong>How to use it:</strong></p><ol><li>On the Execute Command Task select the PP-Select command to your tool;</li><li>Parse the needed information from the MaterialData object using a Expression evaluator;</li></ol><p><strong>Note:</strong></p><p>If the inputs for the command are complex enough replace parsing and command execution task with a Code task</p><p>To execute a Command via code you can use the following code snippet (contains command call and validation.</p><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><span style=\"color:#0000ff;\">const</span> remoteCommandSuccessCode = <span style=\"color:#a31515;\">\"0x00,0x04\"</span>;</div><p><span style=\"color:#0000ff;\">let</span> commandParameters: <span style=\"color:#0000ff;\">any</span>[] = [];</p><p><span style=\"color:#0000ff;\">const</span> sendMessage: Object = {</p><p><span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"S2F41\" </span>, item: { <span style=\"color:#008000;\">//replace with Stream and function intended</span></p></div><div style=\"background-color:#fffffe;font-family:Consolas, 'Courier New', monospace;font-size:14px;line-height:19px;white-space:pre;\"><div style=\"margin-left:60px;\"><span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"L\"</span>, value: [</div><div style=\"margin-left:90px;\">{ <span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"A\"</span>, value: <span style=\"color:#a31515;\">\"PP_SELECT\"</span> }, <span style=\"color:#008000;\">//data id</span></div><div style=\"margin-left:90px;\">{ <span style=\"color:#0000ff;\">type</span>: <span style=\"color:#a31515;\">\"L\"</span>, value: commandParameters}</div><div style=\"margin-left:60px;\">]}</div><div style=\"margin-left:30px;\">} </div><div></div><div><span style=\"color:#0000ff;\">const</span> reply = <span style=\"color:#0000ff;\">await</span> <span style=\"color:#0000ff;\">this</span>.framework.driver.sendRaw(<span style=\"color:#a31515;\">\"connect.iot.driver.secsgem.sendMessage\"</span>, sendMessage);</div><div><span style=\"color:#0000ff;\">let</span> successFound = <span style=\"color:#0000ff;\">false</span>;</div><div><span style=\"color:#0000ff;\">for</span> (<span style=\"color:#0000ff;\">const</span> successCode <span style=\"color:#0000ff;\">of</span> remoteCommandSuccessCode.split(<span style=\"color:#a31515;\">\",\"</span>)) {</div><div style=\"margin-left:30px;\"><span style=\"color:#0000ff;\">if</span> (reply &amp;&amp; reply.item &amp;&amp; parseInt(reply.item.value[<span style=\"color:#09885a;\">0</span>].value.data) === parseInt(successCode.trim())) {</div><div style=\"margin-left:30px;\">successFound = <span style=\"color:#0000ff;\">true</span>;</div><div style=\"margin-left:30px;\"><span style=\"color:#0000ff;\">break</span>;</div><div>}</div></div>",
          "color": "#ffffa5"
        }
      ]
    },
    "drawers": {
      "DIAGRAM": {
        "tasks": {
          "task_28781": {
            "collapsed": false,
            "position": {
              "x": 2851,
              "y": 361
            },
            "outdated": false
          },
          "task_28709": {
            "collapsed": false,
            "position": {
              "x": 582,
              "y": 361
            },
            "outdated": false
          },
          "task_29125": {
            "collapsed": false,
            "position": {
              "x": 1667,
              "y": 481
            },
            "outdated": false
          },
          "task_29612": {
            "collapsed": false,
            "position": {
              "x": 2264,
              "y": 733
            },
            "outdated": false
          },
          "task_15312": {
            "collapsed": false,
            "position": {
              "x": 1130,
              "y": 482
            },
            "outdated": false
          }
        },
        "links": {
          "ccb69b57-6ab4-4c00-a904-d6df674c72da": {
            "vertices": []
          },
          "b260a3fc-f985-4c28-858e-adf58fafa104": {
            "vertices": []
          },
          "2defb049-ec4c-4731-b04f-57a331a9ee0f": {
            "vertices": []
          },
          "430557b5-0ee3-4d86-b7a3-8caf28ce7cbe": {
            "vertices": []
          },
          "a2e0d65f-1dac-4282-919b-d2f36d569e00": {
            "vertices": []
          },
          "63201362-690f-4fa3-80d2-e45b8b162fbe": {
            "vertices": []
          },
          "be48b026-0b4c-4093-b26b-ab716964bab6": {
            "vertices": []
          },
          "0d990a13-71a4-4d07-a2f9-340838e81f8f": {
            "vertices": []
          },
          "8caa456d-27d1-43e3-8f4f-26e2835deb96": {
            "vertices": []
          },
          "0622fa03-d283-40a8-8813-29a48cea5d60": {
            "vertices": []
          },
          "e5d13420-c04e-4073-8497-da7e5873725a": {
            "vertices": []
          }
        },
        "notes": {
          "note_31411": {
            "collapsed": false,
            "position": {
              "x": 275,
              "y": 361
            }
          }
        },
        "zoom": 0.4999999999999996,
        "pan": {
          "x": 137.5,
          "y": 180.5
        }
      }
    }
  }
}